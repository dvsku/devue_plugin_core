CMAKE_MINIMUM_REQUIRED(VERSION 3.14)

IF(POLICY CMP0135)
    CMAKE_POLICY(SET CMP0135 NEW)
ENDIF()

PROJECT(devue_plugin_sdk CXX)

OPTION(DEVUE_SDK_TEST       "Build tests."                                ON)
OPTION(DEVUE_SDK_STATIC_CRT "Link against the static runtime libraries." OFF)

IF(NOT WIN32)
    MESSAGE(FATAL_ERROR "Unsupported platform.")
ENDIF()

IF(NOT "${CMAKE_SIZEOF_VOID_P}" STREQUAL "8")
    MESSAGE(FATAL_ERROR "Unsupported architecture.")
ENDIF()

IF(NOT CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
    MESSAGE(FATAL_ERROR "Unsupported compiler.")
ENDIF()

SET(CMAKE_CXX_FLAGS         "/DWIN32 /D_WINDOWS /W3 /GR /EHsc")
SET(CMAKE_CXX_FLAGS_DEBUG   "/Zi /Ob0 /Od /RTC1")
SET(CMAKE_CXX_FLAGS_RELEASE "/O2 /Ob2 /DNDEBUG")

IF(DEVUE_SDK_STATIC_CRT)
    SET(CMAKE_CXX_FLAGS_DEBUG   "${CMAKE_CXX_FLAGS_DEBUG} /MTd")
    SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MT")
ELSE()
    SET(CMAKE_CXX_FLAGS_DEBUG   "${CMAKE_CXX_FLAGS_DEBUG} /MDd")
    SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MD")
ENDIF()

GET_DIRECTORY_PROPERTY(PARENT_DIR PARENT_DIRECTORY)
IF(PARENT_DIR STREQUAL "")
    SET(DEVUE_SDK_TOP_LEVEL TRUE)
ELSE()
    SET(DEVUE_SDK_TOP_LEVEL FALSE)
ENDIF()

IF(DEVUE_SDK_TOP_LEVEL)
    SET(DEVUE_SDK_OUTPUT_DIR "binaries/windows/${CMAKE_CXX_COMPILER_ID}/${CMAKE_BUILD_TYPE}")
    STRING(TOLOWER ${DEVUE_SDK_OUTPUT_DIR} DEVUE_SDK_OUTPUT_DIR_LOWER)

    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}/${DEVUE_SDK_OUTPUT_DIR_LOWER}")
    SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}/${DEVUE_SDK_OUTPUT_DIR_LOWER}")
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}/${DEVUE_SDK_OUTPUT_DIR_LOWER}")
ENDIF()

ADD_SUBDIRECTORY("dependencies")
ADD_SUBDIRECTORY("source")

IF(DEVUE_SDK_TOP_LEVEL AND DEVUE_SDK_TEST)
    ENABLE_TESTING()
    ADD_SUBDIRECTORY("tests")
ENDIF()
